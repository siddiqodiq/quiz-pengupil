name: Automated Selenium Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-selenium-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Clone Repository
      uses: actions/checkout@v4

    - name: Create Temporary Index File
      run: |
        echo "<?php echo 'PHP server is running!'; ?>" > index.php

    - name: Install Required Packages
      run: |
        sudo apt update
        sudo apt install -y php php-cli php-mysql unzip google-chrome-stable mariadb-server mariadb-client curl

    - name: Start and Configure MariaDB
      run: |
        sudo systemctl start mariadb
        sudo systemctl enable mariadb
        sudo systemctl restart mariadb
        sudo mysql --user=root --execute="CREATE DATABASE IF NOT EXISTS quiz_pengupil;"
        sudo mysql --user=root quiz_pengupil < db/quiz_pengupil.sql
        sudo mysql --user=root --execute="GRANT ALL PRIVILEGES ON quiz_pengupil.* TO 'root'@'localhost';"
        sudo mysql --user=root --execute="FLUSH PRIVILEGES;"

    - name: Verify Database Configuration
      run: |
        sudo mysql -u root -e "USE quiz_pengupil; SHOW TABLES;"

    - name: Launch PHP Development Server
      run: |
        nohup php -S 127.0.0.1:8000 -t . > php_server.log 2>&1 &
        sleep 5
        echo "✅ PHP Server Log:"
        cat php_server.log

    - name: Ensure Server is Running
      run: |
        for i in {1..10}; do
          if curl -s http://127.0.0.1:8000/; then
            echo "✅ PHP server is up and running!"
            exit 0
          fi
          echo "⏳ Waiting for PHP server to start..."
          sleep 2
        done
        echo "❌ PHP server failed to start!"
        exit 1

    - name: Set Up Python Environment
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Python Libraries
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager pytest chromedriver-autoinstaller

    - name: Execute Selenium Test Suite
      run: python tests/test_login_register.py

    - name: Archive Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: selenium-test-results
        path: test-results/

    - name: Archive Test Execution Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: selenium-test-logs
        path: test-results/test_log.txt